version: '3.8'

services:
  # PHP API Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: lingindustri-api
    restart: unless-stopped
    volumes:
      - ./api:/var/www/html
      - ./api/php.ini:/usr/local/etc/php/conf.d/custom.ini
    depends_on:
      - db
      - redis
    networks:
      - lingindustri-network
    ports:
      - "8000:80"
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=lingindustri
      - DB_USERNAME=lingindustri
      - DB_PASSWORD=lingindustri_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_USERNAME=null
      - MAIL_PASSWORD=null
      - MAIL_ENCRYPTION=null

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: lingindustri-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: lingindustri
      MYSQL_USER: lingindustri
      MYSQL_PASSWORD: lingindustri_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - lingindustri-db-data:/var/lib/mysql
      - ./api/database/init:/docker-entrypoint-initdb.d
    networks:
      - lingindustri-network
    ports:
      - "3306:3306"

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: lingindustri-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - lingindustri-network
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=https://api.lingindustri.com/api
      - REACT_APP_USE_MOCK_API=false
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=3000

  # PHPMyAdmin for Database Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: lingindustri-phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - UPLOAD_LIMIT=300M
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - lingindustri-network

  # Redis Service
  redis:
    image: redis:alpine
    container_name: lingindustri-redis
    restart: unless-stopped
    networks:
      - lingindustri-network
    ports:
      - "6379:6379"
    volumes:
      - lingindustri-redis-data:/data

  # Mailhog Service (for email testing)
  mailhog:
    image: mailhog/mailhog
    container_name: lingindustri-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - lingindustri-network

networks:
  lingindustri-network:
    driver: bridge

volumes:
  lingindustri-db-data:
    driver: local
  lingindustri-redis-data:
    driver: local